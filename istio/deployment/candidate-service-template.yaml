apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  labels:
    app: candidate
    application: candidate
    version: v1

  name: candidate-v1
spec:
  selector:
    matchLabels:
      application: candidate
      deployment: canadidate
      version: v1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: candidate
        application: candidate
        deployment: candidate
        version: v1

      # Enable Red Hat Service Mesh's automatic istio sidecar injection
      annotations:
        sidecar.istio.io/inject: "true"

      name: candidate
    spec:
      containers:
      - env:
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace

        image: docker.io/rhtgptetraining/SDGDemoFindcandidate:0.0.1
        ports:
        - containerPort: 8080

        livenessProbe:
          failureThreshold: 2
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: candidate
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 20
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 250m
            memory: 500Mi
          requests:
            cpu: 125m
            memory: 500Mi
        securityContext:
          privileged: false
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File